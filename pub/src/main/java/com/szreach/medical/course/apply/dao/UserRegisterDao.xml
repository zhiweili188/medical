<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szreach.medical.course.apply.dao.UserRegisterDao">
	<resultMap type="com.szreach.medical.course.apply.bean.UserRegister" id="UserRegisterMap">
		<id property="id" column="id"></id>
		<result property="fullName" column="full_name"></result>
		<result property="sex" column="sex"></result>
		<result property="company" column="company"  />
		<result property="department" column="department"></result>
		<result property="educationBackground" column="education_background"></result>
		<result property="idCardNo" column="id_card_no"></result>
		<result property="mobile" column="mobile"></result>
		<result property="email" column="email"></result>
		<result property="type" column="type"></result>
		<result property="title" column="title"></result>
		<result property="identity" column="identity"></result>
		<result property="status" column="status"></result>
		<result property="createTime" column="create_time"></result>
		<result property="userId" column="user_id"></result>

	</resultMap>
	
	<insert id="insert" parameterType="com.szreach.medical.course.apply.bean.UserRegister" useGeneratedKeys="true" keyProperty="id">
		insert into user_register(id, full_name,  sex, birthday, company,department, education_background, id_card_no, mobile,email, type,title,identity,status,create_time,user_id) values(
		   #{id},
		   #{fullName},
		   #{sex},
		   #{birthday},
		   #{company},
		   #{department},
		   #{educationBackground},
		   #{idCardNo},
		   #{mobile},
		   #{email},
		   #{type},
		   #{title},
		   #{identity},
		   0,
		   #{createTime},
		   #{userId}
		)
	</insert>
	<update id="update" parameterType="com.szreach.medical.course.apply.bean.UserRegister" >
		update user_register
		set
		   full_name = #{fullName},
		  sex = #{sex},
		  birthday= #{birthday},
		  company= #{company},
		  department= #{department},
		  education_background=#{educationBackground},
		 id_card_no=  #{idCardNo},
		  mobile= #{mobile},
		   email=#{email},
		   type=#{type},
		   title=#{title},
		  identity= #{identity}
		where id=#{id}
	</update>
    
	<select id="countAll"  resultType="int">
        select count(*) c from user_register
         <include refid="searchCondition"></include>
    </select>
    
    <select id="query" resultMap="UserRegisterMap" >
        select *  from user_register
        <include refid="searchCondition"></include>
         <if test="page != null">
        		limit #{page.beginIndex}, #{page.endIndex}
        	</if>
    </select>
    
    <sql id="searchCondition">
    	<where>
        	<if test="query.fullName != null">
        		and full_name like "%"#{query.fullName}"%"
        	</if>
        	<if test="query.status != null">
        		and status = #{query.status}
        	</if>
        	
        </where>
    </sql>
   
   <select id="getByUserId" parameterType="string" resultMap="UserRegisterMap" >
   		 select *  from user_register where user_id= #{userId}
   </select>
   
   <select id="getByIdCardNo" parameterType="string" resultMap="UserRegisterMap">
		SELECT * from user_register  WHERE id_card_no = #{idCardNo}
	</select>
   <select id="getByEmail" parameterType="string" resultMap="UserRegisterMap">
		SELECT * from user_register  WHERE id_card_no = #{email}
	</select>
	
</mapper> 